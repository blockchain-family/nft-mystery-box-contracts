.version sol 0.57.1

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/NewMarket.sol, 48
THROW 100
.loc ../contracts/NewMarket.sol, 0

.macro nftData
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/NewMarket.sol, 50
ENDS
.loc ../contracts/NewMarket.sol, 0
CALLREF {
	CALL $nftData_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000025ea740c2_
	STSLICER
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro nftData_internal_macro
.loc ../contracts/NewMarket.sol, 51
GETGLOB 26
.loc ../contracts/NewMarket.sol, 0

.macro state
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/NewMarket.sol, 54
ENDS
.loc ../contracts/NewMarket.sol, 0
CALLREF {
	CALL $state_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000027df80c0e_
	STSLICER
	STU 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	state_internal
.type	state_internal, @function
CALL $state_internal_macro$

.macro state_internal_macro
.loc ../contracts/NewMarket.sol, 54
PUSHINT 0
.loc ../contracts/NewMarket.sol, 55
NOW
GETGLOB 18
LESS
PUSHCONT {
	.loc ../contracts/NewMarket.sol, 56
	DROP
	PUSHINT 0
	.loc ../contracts/NewMarket.sol, 0
}
PUSHCONT {
	GETGLOB 23
	ISNULL
	PUSHCONT {
		NOW
		GETGLOB 19
		GEQ
		GETGLOB 15
		GETGLOB 14
		EQUAL
		OR
		PUSHCONT {
			.loc ../contracts/NewMarket.sol, 60
			DROP
			PUSHINT 2
			.loc ../contracts/NewMarket.sol, 0
		}
		PUSHCONT {
			.loc ../contracts/NewMarket.sol, 62
			DROP
			PUSHINT 1
			.loc ../contracts/NewMarket.sol, 0
		}
		IFELSE
	}
	PUSHCONT {
		.loc ../contracts/NewMarket.sol, 58
		DROP
		PUSHINT 3
		.loc ../contracts/NewMarket.sol, 0
	}
	IFELSE
}
IFELSE
.loc ../contracts/NewMarket.sol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/NewMarket.sol, 67
PUSHINT 0
NEWDICT
PAIR
SETGLOB 10
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 11
PUSHINT 0
SETGLOB 12
PUSHINT 0
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
SETGLOB 15
PUSHINT 0
SETGLOB 16
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 17
PUSHINT 0
SETGLOB 18
PUSHINT 0
SETGLOB 19
PUSHINT 0
SETGLOB 20
PUSHINT 0
SETGLOB 21
PUSHREF {
}
SETGLOB 22
NULL
SETGLOB 23
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 24
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 25
NEWDICT
SETGLOB 26
NEWDICT
SETGLOB 27
NEWDICT
SETGLOB 28
NEWDICT
SETGLOB 29
.loc ../contracts/NewMarket.sol, 69
CTOS
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 16
LDU 16
LDU 16
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDU 32
LDU 128
LDU 128
LDREF
LDI 1
SWAP
PUSHCONT {
	LDU 32
}
PUSHCONT {
	NULL
	SWAP
}
IFELSE
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDDICT
LDDICT
LDDICT
LDDICT
ENDS
PUSHINT 19
PUSHINT 0
REVX
SETGLOB 11
SETGLOB 10
SETGLOB 13
SETGLOB 14
SETGLOB 15
SETGLOB 16
SETGLOB 17
SETGLOB 18
SETGLOB 19
SETGLOB 20
SETGLOB 21
SETGLOB 22
SETGLOB 23
SETGLOB 24
SETGLOB 25
SETGLOB 26
SETGLOB 27
SETGLOB 28
SETGLOB 29
.loc ../contracts/NewMarket.sol, 113
GETGLOB 11
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 128
SENDRAWMSG
.loc ../contracts/NewMarket.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro bla
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/NewMarket.sol, 117
ENDS
.loc ../contracts/NewMarket.sol, 0
CALLREF {
	CALL $bla_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002132d2d7a_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	bla_internal
.type	bla_internal, @function
CALL $bla_internal_macro$

.macro bla_internal_macro
.loc ../contracts/NewMarket.sol, 118
PUSHREF {
	.blob x626c61626c61626c61
}
.loc ../contracts/NewMarket.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDMSGADDR
LDU 64
LDREF
ENDS
CTOS
LDU 16
LDU 16
LDU 16
LDU 16
LDMSGADDR
LDU 32
LDU 32
LDU 128
LDU 128
LDREF
LDI 1
SWAP
PUSHCONT {
	LDU 32
}
PUSHCONT {
	NULL
	SWAP
}
IFELSE
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDDICT
LDDICT
LDDICT
LDDICT
ENDS
PUSHINT 0
GETGLOBVAR
GETGLOB 1
GETGLOB 2
GETGLOB 3
GETGLOB 4
GETGLOB 5
GETGLOB 6
GETGLOB 7
GETGLOB 8
GETGLOB 9
PUSHINT 20
PUSHINT 10
BLKSWX
PUSHINT 30
TUPLEVAR
POP C7
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	GETGLOBVAR
	GETGLOB 1
	GETGLOB 2
	GETGLOB 3
	GETGLOB 4
	GETGLOB 5
	GETGLOB 6
	GETGLOB 7
	GETGLOB 8
	GETGLOB 9
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 1
	PUSH S13
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 64
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 0
	BLKPUSH 3, 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	PUSHREF {
	}
	NULL
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	NEWDICT
	BLKPUSH 3, 0
	PUSHINT 30
	TUPLEVAR
	POP C7
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
PUSH C7
FALSE
PUSHINT 30
SETINDEXVARQ
PUSHINT 31
UNTUPLEVAR
DROP
PUSHINT 30
PUSHINT 0
REVX
BLKDROP 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STSLICE
STU 64
PUSHINT 17
ROLLREVX
NEWC
STU 16
STU 16
STU 16
STU 16
STSLICE
STU 32
STU 32
STU 128
STU 128
STREF
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 32
}
IFELSE
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
STDICT
STDICT
STDICT
STDICT
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro nftPerHand
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000952ad0a8
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro totalCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000009d6afd39
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro soldCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e662eb5c
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro mintCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000932cc698
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro collection
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000008e86a764
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro startDate
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000e0d5792b
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro revealDate
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fc72c000
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro totalRaised
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 20
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000a6c9600b
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro totalWithdraw
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fe61ce7d
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro provenanceHash
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ee94d9b2
	NEWC
	STSLICE
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro startIndex
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d2b10a32
	NEWC
	STSLICE
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		DROP
		STSLICECONST 0
	}
	PUSHCONT {
		SWAP
		STSLICECONST 1
		STU 32
	}
	IFELSE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro tokenRoot
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 24
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fcbfaaf2
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro tokenWallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 25
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000f1030b6b
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro priceRule
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 27
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000009c84d0fb
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro soldNfts
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 28
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d34fb8e8
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro claimNft
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 29
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d6797285
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 1855248818
LEQ
IFJMPREF {
	DUP
	PUSHINT 355127464
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 80431966
		EQUAL
		IFJMPREF {
			CALL $bla$
		}
		DUP
		PUSHINT 243705700
		EQUAL
		IFJMPREF {
			CALL $collection$
		}
		DUP
		PUSHINT 321701528
		EQUAL
		IFJMPREF {
			CALL $mintCount$
		}
		DUP
		PUSHINT 355127464
		EQUAL
		IFJMPREF {
			CALL $nftPerHand$
		}
	}
	DUP
	PUSHINT 528352003
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 397004848
		EQUAL
		IFJMPREF {
			CALL $nftData$
		}
		DUP
		PUSHINT 478466299
		EQUAL
		IFJMPREF {
			CALL $priceRule$
		}
		DUP
		PUSHINT 493550905
		EQUAL
		IFJMPREF {
			CALL $totalCount$
		}
		DUP
		PUSHINT 528352003
		EQUAL
		IFJMPREF {
			CALL $state$
		}
	}
	DUP
	PUSHINT 1450799749
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 650731531
		EQUAL
		IFJMPREF {
			CALL $totalRaised$
		}
		DUP
		PUSHINT 1387334194
		EQUAL
		IFJMPREF {
			CALL $startIndex$
		}
		DUP
		PUSHINT 1397733608
		EQUAL
		IFJMPREF {
			CALL $soldNfts$
		}
		DUP
		PUSHINT 1450799749
		EQUAL
		IFJMPREF {
			CALL $claimNft$
		}
	}
	DUP
	PUSHINT 1855248818
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1624602923
		EQUAL
		IFJMPREF {
			CALL $startDate$
		}
		DUP
		PUSHINT 1717758812
		EQUAL
		IFJMPREF {
			CALL $soldCount$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1855248818
		EQUAL
		IFJMPREF {
			CALL $provenanceHash$
		}
	}
}
DUP
PUSHINT 2120339069
LEQ
IFJMPREF {
	DUP
	PUSHINT 1896024939
	EQUAL
	IFJMPREF {
		CALL $tokenWallet$
	}
	DUP
	PUSHINT 2087895040
	EQUAL
	IFJMPREF {
		CALL $revealDate$
	}
	DUP
	PUSHINT 2092935922
	EQUAL
	IFJMPREF {
		CALL $tokenRoot$
	}
	DUP
	PUSHINT 2120339069
	EQUAL
	IFJMPREF {
		CALL $totalWithdraw$
	}
}

